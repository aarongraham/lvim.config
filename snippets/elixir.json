{
  "describe": {
    "prefix": "desc",
    "body": [
      "describe \"${1}\" do",
      "  ${2}",
      "end"
    ],
    "description": "describe block"
  },
  "test": {
    "prefix": "test",
    "body": [
      "test \"${1}\" do",
      "  ${2}",
      "end"
    ],
    "description": "test block"
  },
  "surface_liveview": {
    "prefix": "slv",
    "body": [
      "defmodule Web.${1}Live do",
      "  use Web, :live_view",
      "",
      "  def render(assigns) do",
      "    ~F\"\"\"",
      "      ${2}",
      "    \"\"\"",
      "  end",
      "end"
    ],
    "description": "Surface LiveView module"
  },
  "surface_livecomponent": {
    "prefix": "slc",
    "body": [
      "defmodule Web.${1}.${2} do",
      "  use Web, :live_component",
      "",
      "  def render(assigns) do",
      "    ~F\"\"\"",
      "      ${2}",
      "    \"\"\"",
      "  end",
      "end"
    ],
    "description": "Surface LiveComponent module"
  },
  "surface_component": {
    "prefix": "sc",
    "body": [
      "defmodule Web.Components.${1} do",
      "  use Web, :component",
      "",
      "  def render(assigns) do",
      "    ~F\"\"\"",
      "      ${2}",
      "    \"\"\"",
      "  end",
      "end"
    ],
    "description": "Surface Component module"
  },
  "lv_mount": {
    "prefix": "mount",
    "body": [
      "def mount(_params, _session, socket) do",
      "  socket",
      "  |> assign(${1:key}: ${2:value})",
      "  |> ok()",
      "end"
    ],
    "description": "LiveView mount function"
  },
  "lv_rend": {
    "prefix": "rend",
    "body": [
      "def render(assigns) do",
      "  ~F\"\"\"",
      "  ${0}",
      "  \"\"\"",
      "end"
    ],
    "description": "Surface render function"
  },
  "lv_handle_event": {
    "prefix": "he",
    "body": [
      "def handle_event(${1:event}, _, socket) do",
      "  socket",
      "  |> assign(${2:key}: ${3:value})",
      "  |> noreply()",
      "end"
    ],
    "description": "LiveView handle_event function"
  },
  "lv_handle_info": {
    "prefix": "hi",
    "body": [
      "def handle_info(${1:message}, socket) do",
      "  socket",
      "  |> assign(${2:key}: ${3:value})",
      "  |> noreply()",
      "end"
    ],
    "description": "LiveView handle_info function"
  },
  "lv_handle_params": {
    "prefix": "hp",
    "body": [
      "def handle_params(params, _url, socket) do",
      "  socket |> noreply()",
      "end"
    ],
    "description": "LiveView handle_params function"
  },
  "Inspect": {
    "prefix": "iiv",
    "body": "IO.inspect(${1}, label: \"************* ${1} L:$TM_LINE_NUMBER\")",
    "description": "Adds a labelled `IO.inspect`"
  },
  "Inspect-pipe": {
    "prefix": "iip",
    "body": "|> IO.inspect(label: \"************* $0 - L:$TM_LINE_NUMBER\")",
    "description": "Adds a pipeline with a labelled `IO.inspect`"
  },
  "Inspect-all": {
    "prefix": "iia",
    "body": "IO.inspect(binding(), label: \"************* L:$TM_LINE_NUMBER\")",
    "description": "Adds a labelled `IO.inspect` with all vars in scope"
  },
  "key-value": {
    "prefix": "kv",
    "body": "${1}: ${1}",
    "description": "Adds a matching key value pair"
  }
}
